Programação Orientada a Objetos
Dada a seguinte situação:

O Escritório Advogados S.A. trabalham cerca de 25 advogados, de diversas especialidades. Há uma
grande quantidade de livros numa sala, onde os advogados podem pegá-los para empréstimo. Esses
livros são importantes para tirar dúvidas e redigir os processos. Dada essa necessidade, você será
responsável por implementar em JAVA, a situação do controle dos livros. Cada livro possui título,
autor, editora, preço e a área (por exemplo: direito administrativo, direito penal, etc). Para facilitar o
controle dos empréstimos, é interessante que cada livro tenha ainda um código. Quando o advogado
precisa de um livro, ele informa o código ou o título, se estiver disponível, são registrados a data de
empréstimo e o livro é bloqueado para novos empréstimos. Os livros estão disponíveis no momento
que são cadastrados (ou quando forem devolvidos). É necessário também fazer o cadastro dos
advogados. E para cada um são registrados: nome, CPF, telefone, data que foi admitido e o
departamento que atua (a empresa tem 4 departamentos, cada um possui nome, responsável e a
quantidade de processos). Na devolução, é solicitada a quantidade de dias que o advogado ficou com
o livro, e se for maior que 10 dias, ele deverá pagar uma multa no valor de 10% do preço do livro por
dia, além dos 10 dias que o advogado tem direito.
Pede-se que você que utilizando a linguagem JAVA:
1. Identifique além da classe Principal/Main, pelo menos 3 classes
2. Faça as criações dos objetos (pelo menos 2 de cada classe identificada)
3. Apresente o seguinte menu
(a) Exibir advogados, livros e empréstimos (exibir todas as informações do sistema)
(b) Realizar empréstimo
(c) Devolver livro e exibir, se for o caso, o valor a pagar
(d) Mudar advogado de departamento (solicitar o nome do advogado)
(e) Exibir os títulos dos livros que estão emprestados de uma área específica (solicitar o nome
da área)

Nesta atividade, você deverá:
a) Aplicar o conceito de construtor, sobrecarga, encapsulamento (este último para todos os atributos)
b) Todas as classes deverão ter pelo menos 1 método
c) Deverá haver pelo menos 1 método com retorno
d) Deverá haver pelo menos 1 método com parâmetro
OBSERVAÇÕES:
• Está é uma descrição geral, fique à vontade para identificar classes, atributos e métodos
relacionados ao problema que você julgue importantes;
• Pode ser realizado em dupla, desde que não seja a mesma dupla que trabalhou no primeiro
bimestre;
• Apenas um membro da dupla precisa enviar o trabalho;
• Trabalhos iguais ou muito simulares receberão nota zero.
